---
title: "Coursework Template My Work"
subtitle: 'MSc in Statistics 2025/26, Imperial College London'
author: "Akhilendra Sabherwal"
format:
  html:
    toc: true
    highlight: tango
    self-contained: true
    df-print: paged
  pdf: default
format-links: false
csl: "https://www.zotero.org/styles/harvard-imperial-college-london"
bibliography: "My_work.bib" 
---

<style type="text/css">
h1{
  font-size: 24pt;
}
h2{
  font-size: 18pt;
}
body{
  font-size: 12pt;
}
</style>

```{r setup, include = FALSE, tidy=TRUE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
include_solutions <- TRUE
```
```{r setup2, include=FALSE, tidy=TRUE}
require(rmarkdown)
require(knitr)
require(kableExtra)
require(dplyr)
require(palmerpenguins)
require(ggplot2)
# Put any library imports and other preamble here.
```

This is a document for me to practice my quarto markdown skills. Hopefully I will learn from this and it will help me do courseworks.

Please note:

- Rmarkdown syntax for the title and document style;
- bookdown syntax to label and reference equations;
- bookdown syntax to referencing literate and provide a bib file;
- kable syntax to build clean and clear tables that can be referenced;
- Rmarkdown inline functions to collect and print all code used.

# This section I will work on the penguin dataset



```{r}
#| echo: false
plot(x = penguins$bill_length_mm, 
     y = penguins$bill_depth_mm)
```

```{r}
#| results: hold
mean(penguins$body_mass_g, na.rm = TRUE)
median(penguins$body_mass_g, na.rm = TRUE)
```


This is a table with count of penguins per species

```{r}
#| label: tbl-species-counts
#| tbl-cap: "Penguin species counts"
#| warning: false

species_counts <- table(penguins$species)
knitr::kable(species_counts, col.names = c("Species", "Count"))
```

As shown in @tbl-species-counts, the Adelie penguin is the most common species in the dataset.



```{r}
#| label: fig-box-plot
#| echo: false

plot(x = penguins$species, 
     y = penguins$body_mass_g, 
     ylab = "Body mass (g)", 
     xlab = "Species",
     col = c(6,3,4))
abline(h = mean(penguins$body_mass_g, na.rm = TRUE), col = 2, lwd = 2)
```

This @fig-box-plot is a box plot for the species and their body mass, the red line is the average weight of all the penguins.



```{r}
#| echo: false
penguins <- palmerpenguins::penguins

# Add a column marking rows with missing values
penguins$has_missing <- apply(is.na(penguins), 1, any)


penguin_summary <- penguins %>%
  group_by(species) %>%
  summarise(
    avg_bill_length = mean(bill_length_mm, na.rm = TRUE),
    avg_flipper_length = mean(flipper_length_mm, na.rm = TRUE)
  )
```

```{r}
#| label: fig-penguins
#| echo: false
#| warning: false
#| fig-cap: "Penguin body measurements"
#| layout-ncol: 2
#| fig-subcap: ["Flipper length vs. body mass", "Body mass by species"]

# --- First plot (ggplot) ---
ggplot(penguins, aes(x = flipper_length_mm, 
                     y = body_mass_g, 
                     color = species, 
                     shape = species)) +
  geom_point(size = 3) +
  labs(
    x = "Flipper Length (mm)",
    y = "Body Mass (g)"
  ) +
  theme_minimal()

# --- Second plot (base R) ---
plot(x = penguins$species, 
     y = penguins$body_mass_g, 
     ylab = "Body mass (g)", 
     xlab = "Species",
     col = c(6,3,4))
abline(h = mean(penguins$body_mass_g, na.rm = TRUE), col = 2, lwd = 2)
```


As shown in @fig-penguins, penguin body measurements vary across species.  
Specifically, @fig-penguins-1 highlights the relationship between flipper length and body mass,  
while @fig-penguins-2 compares body mass across species with a reference line for the mean.


This paper got me through my dissertation @vaswani2023attentionneed.


# This section will have a table

In this question we seek to generate samples from the standard Cauchy distribution, with pdf given by

$$
p(x) = \frac{1}{\pi (1 + x^2)}, \quad x \in \mathbb{R}.
$$ {#eq-cauchy-pdf}

The cdf associated with @eq-cauchy-pdf is given by

$$
F(x) = \frac{1}{\pi}\arctan(x) + \frac{1}{2}.
$$ {#eq-cauchy-cdf}


**Part a.**  We apply the inversion method as described by @graham2013stochastic. We first compute the generalised inverse of the cdf @eq-cauchy-cdf.  To this end, let $y\in [0,1]$, then

\begin{align}
    y &= F(x), \quad \iff \label{eq-inversion-step1} \\
    y &= \frac{1}{\pi}\arctan(x) + \frac{1}{2} \quad \iff \\
    y - \tfrac{1}{2} &= \tfrac{1}{\pi}\arctan(x)  \quad \iff \\
    \pi\!\left(y-\tfrac{1}{2}\right) &= \arctan(x)  \quad \iff \\
    x &= \tan\!\left(\pi\!\left(y-\tfrac{1}{2}\right)\right). 
\end{align}


By the inversion method [@graham2013stochastic], if $Y \sim U[0,1]$, then

$$
X = \tan\!\left(\pi\!\left(Y - \tfrac{1}{2}\right)\right).
$$ {#eq-inversion}


```{r, echo=FALSE}

### Question 1a

generate_cauchy_samples <- function(n) {
  # Generate 'n' uniform random numbers between 0 and 1
  u <- runif(n)
  
  # Apply the inverse CDF formula to get Cauchy samples
  samples <- tan(pi * (u - 0.5))  
  return(samples)
}

num_samples = 1000

# Generate samples from the standard Cauchy distribution
cauchy_samples <- generate_cauchy_samples(num_samples)

```


**Part b.**   The empirical cdf based on $N$ samples $x_1, \ldots, x_N$ is defined to be
              $$
                \widehat{F}(t) = \frac{1}{N}\sum_{i = 1}^N \mathbf{1}[x_i \leq t], \quad x\in \mathbb{t}.
              $$
To generate the empirical cdf in R, we perform the following steps:
            
a. Generate $N$ samples from the distribution using the inversion method, as detailed in the previous question.  
b. Sort the samples in ascending order $x_1 \leq x_2 \leq x_3 \leq \ldots \leq x_N$.
c. The empirical CDF at value $x_i$ is given by $i/N$.  


In the following figure we plot the empirical cdf based on 1000 samples (black line), and compare against the analytical cdf (red line).  

```{r echo=FALSE}

### Question 1b

# Sort the samples in ascending order
sorted_samples <- sort(cauchy_samples)

# Calculate the cumulative probabilities for each sample
cumulative_probs <- (1:num_samples) / num_samples

x_values <- seq(-100, 100,  length.out = 1000)
cdf_values <- pcauchy(x_values)

# Plot the empirical CDF
plot(sorted_samples, 
     cumulative_probs, 
     type = "s", 
     xlab = "x", 
     ylab = "Empirical CDF", 
     main = "Empirical CDF of Standard Cauchy Distribution", 
     lwd = 2, lty = 1, xlim = c(-100,100))
lines(x_values, cdf_values, type = "l", 
      xlab = "x", ylab = "CDF", main = "CDF of Standard Cauchy Distribution", 
      col = 'red', lty = 2)
```

**Part c.**  We shall use the samples to compute the empirical cdf for the values $x = 0.5, 1, 10$.  

```{r echo=FALSE}

### Question 1c

calculate_ecdf <- function(x) {
    return(sum(sorted_samples <= x)/num_samples)
}

df <- data.frame(x = c(0.5, 1.0, 10.0), 
                ecdf = c(calculate_ecdf(0.5), 
                         calculate_ecdf(1.0), 
                         calculate_ecdf(10.0))
                )
kbl(df,
    caption = 'Empirical CDF', 
    label = 'ecdf',
    digits = 2) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    font_size = 12)
```


# Code appendix

Rather than re-paste all the code to the appendix, here is a trick which makes the markdown file output all the code (without) execution in the appendix, without any duplication.

Please keep in mind to format the code so that the entire code is clearly visible and does not run into the margins of the pdf version.  

```{r ref.label=knitr::all_labels(), echo = T, eval = F}
```

# References
